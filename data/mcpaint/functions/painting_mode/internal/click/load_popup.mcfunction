execute if data storage mcpaint:calc painter_tick.intersect.child{button:"cancel"} run data modify storage mcpaint:calc painter_command set value {command:"popup.cancel"}
execute if data storage mcpaint:calc painter_tick.intersect.child{button:"cancel"} run function mcpaint:painting_mode/sound/generic_button

execute if data storage mcpaint:calc painter_tick.intersect.child{button:"ok"} if data storage mcpaint:calc popup{filename:""} run tellraw @s {"translate":"mcpaint.popup.load.nothing_selected"}
execute if data storage mcpaint:calc painter_tick.intersect.child{button:"ok"} unless data storage mcpaint:calc popup{filename:""} run data modify storage mcpaint:calc painter_command set value {command:"popup.load.ok"}
execute if data storage mcpaint:calc painter_tick.intersect.child{button:"ok"} unless data storage mcpaint:calc popup{filename:""} run advancement grant @p only mcpaint:guide/load_work
execute if data storage mcpaint:calc painter_tick.intersect.child{button:"ok"} run function mcpaint:painting_mode/sound/generic_button

execute if data storage mcpaint:calc painter_tick.intersect.child{button:"switch_page"} store result score #temp.current_value mcpaint.calc run data get storage mcpaint:calc popup.page 1
execute if data storage mcpaint:calc painter_tick.intersect.child{button:"switch_page"} store result score #temp.max mcpaint.calc run data get storage mcpaint:calc popup.pages 1
execute if data storage mcpaint:calc painter_tick.intersect.child{button:"switch_page"} unless score @s mcpaint.sneak matches 1.. store result score #temp.new_value mcpaint.calc run data get storage mcpaint:calc painter_tick.intersect.child.direction 1
execute if data storage mcpaint:calc painter_tick.intersect.child{button:"switch_page"} if score @s mcpaint.sneak matches 1.. store result score #temp.new_value mcpaint.calc run data get storage mcpaint:calc painter_tick.intersect.child.direction 10
execute if data storage mcpaint:calc painter_tick.intersect.child{button:"switch_page"} run scoreboard players operation #temp.new_value mcpaint.calc += #temp.current_value mcpaint.calc
execute if data storage mcpaint:calc painter_tick.intersect.child{button:"switch_page"} if score #temp.new_value mcpaint.calc matches ..0 run scoreboard players set #temp.new_value mcpaint.calc 1
execute if data storage mcpaint:calc painter_tick.intersect.child{button:"switch_page"} if score #temp.new_value mcpaint.calc > #temp.max mcpaint.calc run scoreboard players operation #temp.new_value mcpaint.calc = #temp.max mcpaint.calc
execute if data storage mcpaint:calc painter_tick.intersect.child{button:"switch_page"} unless score #temp.new_value mcpaint.calc = #temp.current_value mcpaint.calc run data modify storage mcpaint:calc painter_command set value {command:"popup.load.switch_page"}
execute if data storage mcpaint:calc painter_tick.intersect.child{button:"switch_page"} unless score #temp.new_value mcpaint.calc = #temp.current_value mcpaint.calc store result storage mcpaint:calc painter_command.page int 1 run scoreboard players get #temp.new_value mcpaint.calc
execute if data storage mcpaint:calc painter_tick.intersect.child{button:"switch_page"} unless score #temp.new_value mcpaint.calc = #temp.current_value mcpaint.calc run function mcpaint:painting_mode/sound/generic_button

execute if data storage mcpaint:calc painter_tick.intersect.child{button:"select_work"} store result score max mcpaint.calc run data get storage mcpaint:calc popup.lines_on_page 1
execute if data storage mcpaint:calc painter_tick.intersect.child{button:"select_work"} run scoreboard players operation line mcpaint.calc = ui_v mcpaint.calc
execute if data storage mcpaint:calc painter_tick.intersect.child{button:"select_work"} run scoreboard players remove line mcpaint.calc 420
execute if data storage mcpaint:calc painter_tick.intersect.child{button:"select_work"} run scoreboard players set op mcpaint.calc -157
execute if data storage mcpaint:calc painter_tick.intersect.child{button:"select_work"} run scoreboard players operation line mcpaint.calc /= op mcpaint.calc
execute if data storage mcpaint:calc painter_tick.intersect.child{button:"select_work"} run scoreboard players add line mcpaint.calc 9
execute if data storage mcpaint:calc painter_tick.intersect.child{button:"select_work"} run data modify storage mcpaint:calc popup.clicked_line set from storage mcpaint:calc popup.filename
execute if data storage mcpaint:calc painter_tick.intersect.child{button:"select_work"} if score line mcpaint.calc <= max mcpaint.calc if score line mcpaint.calc matches 1 run data modify storage mcpaint:calc popup.clicked_line set from storage mcpaint:calc popup.current_page_texts[0]
execute if data storage mcpaint:calc painter_tick.intersect.child{button:"select_work"} if score line mcpaint.calc <= max mcpaint.calc if score line mcpaint.calc matches 2 run data modify storage mcpaint:calc popup.clicked_line set from storage mcpaint:calc popup.current_page_texts[1]
execute if data storage mcpaint:calc painter_tick.intersect.child{button:"select_work"} if score line mcpaint.calc <= max mcpaint.calc if score line mcpaint.calc matches 3 run data modify storage mcpaint:calc popup.clicked_line set from storage mcpaint:calc popup.current_page_texts[2]
execute if data storage mcpaint:calc painter_tick.intersect.child{button:"select_work"} if score line mcpaint.calc <= max mcpaint.calc if score line mcpaint.calc matches 4 run data modify storage mcpaint:calc popup.clicked_line set from storage mcpaint:calc popup.current_page_texts[3]
execute if data storage mcpaint:calc painter_tick.intersect.child{button:"select_work"} if score line mcpaint.calc <= max mcpaint.calc if score line mcpaint.calc matches 5 run data modify storage mcpaint:calc popup.clicked_line set from storage mcpaint:calc popup.current_page_texts[4]
execute if data storage mcpaint:calc painter_tick.intersect.child{button:"select_work"} if score line mcpaint.calc <= max mcpaint.calc if score line mcpaint.calc matches 6 run data modify storage mcpaint:calc popup.clicked_line set from storage mcpaint:calc popup.current_page_texts[5]
execute if data storage mcpaint:calc painter_tick.intersect.child{button:"select_work"} if score line mcpaint.calc <= max mcpaint.calc if score line mcpaint.calc matches 7 run data modify storage mcpaint:calc popup.clicked_line set from storage mcpaint:calc popup.current_page_texts[6]
execute if data storage mcpaint:calc painter_tick.intersect.child{button:"select_work"} if score line mcpaint.calc <= max mcpaint.calc if score line mcpaint.calc matches 8 run data modify storage mcpaint:calc popup.clicked_line set from storage mcpaint:calc popup.current_page_texts[7]
execute if data storage mcpaint:calc painter_tick.intersect.child{button:"select_work"} store success score different mcpaint.calc run data modify storage mcpaint:calc popup.filename set from storage mcpaint:calc popup.clicked_line
execute if data storage mcpaint:calc painter_tick.intersect.child{button:"select_work"} if score different mcpaint.calc matches 1 run data modify storage mcpaint:calc painter_command set value {command:"popup.load.select_work"}
execute if data storage mcpaint:calc painter_tick.intersect.child{button:"select_work"} if score different mcpaint.calc matches 1 run function mcpaint:painting_mode/sound/generic_button